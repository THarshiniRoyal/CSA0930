public class NaturalNumbersThreads {
    private static int count = 1;
    private static final int MAX_COUNT = 10;
    private static final Object lock = new Object();

    public static void main(String[] args) {
        Thread t1 = new Thread(new NaturalNumberPrinter(1));
        Thread t2 = new Thread(new NaturalNumberPrinter(2));
        Thread t3 = new Thread(new NaturalNumberPrinter(3));

        t1.start();
        t2.start();
        t3.start();
    }

    private static class NaturalNumberPrinter implements Runnable {
        private int id;

        public NaturalNumberPrinter(int id) {
            this.id = id;
        }

        @Override
        public void run() {
            while (count <= MAX_COUNT) {
                synchronized (lock) {
                    while (count % 3 != id) {
                        try {
                            lock.wait();
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                    }
                    System.out.println("Thread " + id + " prints: " + count);
                    count++;
                    lock.notifyAll();
                }
            }
        }
    }
}
